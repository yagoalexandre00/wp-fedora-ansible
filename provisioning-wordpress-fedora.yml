---
- hosts: fedora
  handlers:
    - name: restart apache
      ansible.builtin.service:
        name: httpd
        state: restarted
        enabled: true
    - name: restart php-fpm
      ansible.builtin.service:
        name: php-fpm
        state: restarted
        enabled: true
  name: Provisioning Wordpress - Fedora Server
  become: true
  tasks:
    - name: Add port 80 to firewalld
      shell:
        cmd: "firewall-cmd --add-port=80/tcp && firewall-cmd --runtime-to-permanent"
    - name: Install Apache
      dnf:
        pkg:
          - httpd
        state: latest
        update_cache: true
    - name: Start and enable apache
      ansible.builtin.systemd:
        name: httpd
        state: started
        enabled: true
    - name: Install dependencies
      dnf:
        pkg:
          - php
          - php-fpm
          - php-mysqlnd
          - php-opcache
          - php-gd
          - php-xml
          - php-mbstring
          - php-curl
          - php-pecl-imagick
          - php-pecl-zip
          - libzip
          - python3-pip
        state: latest
        update_cache: true
    - name: Install PyMySQL - PIP
      ansible.builtin.pip:
        name:
          - PyMySQL
        state: latest
    - name: Edit php.ini (max_execution_time)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "max_execution_time"
        line: "max_execution_time = 300"
    - name: Edit php.ini (max_input_time)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "max_input_time"
        line: "max_input_time = 300"
    - name: Edit php.ini (memory_limit)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "memory_limit"
        line: "memory_limit = 512M"
    - name: Edit php.ini (post_max_size)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "post_max_size"
        line: "post_max_size = 256M"
    - name: Edit php.ini (upload_max_filesize)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "upload_max_filesize"
        line: "upload_max_filesize = 256M"
      notify: restart php-fpm
    - name: Create php info file
      shell:
        cmd: echo "<?php phpinfo(); ?>" > /var/www/html/index.php
    - name: Install mariadb-server
      dnf:
        name: mariadb-server
        state: latest
        update_cache: true
    - name: Start and enable mariadb-server
      ansible.builtin.systemd:
        name: mariadb
        state: started
        enabled: true
    - name: Create a new database with name 'wpdb'
      ansible.builtin.shell:
        cmd: mysql -e "CREATE DATABASE wpdb;"
      ignore_errors: true
    - name: Create user wordpress and grant privileges
      ansible.builtin.shell:
        cmd: mysql -e "GRANT ALL PRIVILEGES ON wpdb.* TO 'wpuser'@'localhost' IDENTIFIED BY '1234'; FLUSH PRIVILEGES;"
      ignore_errors: true
    - name: Download Wordpress
      ansible.builtin.unarchive:
        src: https://br.wordpress.org/latest-pt_BR.tar.gz
        dest: /var/www/html
        remote_src: true
    - name: Copy wordpress folder content to /var/www/html
      ansible.builtin.copy:
        src: /var/www/html/wordpress/
        dest: /var/www/html/
        remote_src: true
    - name: Delete wordpress folder
      shell:
        cmd: rm -rf /var/www/html/wordpress /var/www/html/*.tar.gz
    - name: Rename wp-config-sample.php to wp-config.php
      ansible.builtin.copy:
        src: /var/www/html/wp-config-sample.php
        dest: /var/www/html/wp-config.php
        force: no
        remote_src: true
    - name: Define database settings
      ansible.builtin.replace:
        path: /var/www/html/wp-config.php
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace }}"
      with_items:
        - { regexp: "nome_do_banco_de_dados_aqui", replace: "wpdb" }
        - { regexp: "nome_de_usuario_aqui", replace: "wpuser" }
        - { regexp: "senha_aqui", replace: "1234" }
    - name: Define wp known secrets
      ansible.builtin.lineinfile:
        path: /var/www/html/wp-config.php
        search_string: "{{ item.search_string }}"
        line: "{{ item.line }}"
      with_items: 
      - {search_string: 'AUTH_KEY', line: "define('AUTH_KEY',         '/Mx`}(o#49gw%hnG3oKy}uy-3Fk?q}_|73T5hVn+,X{wXqM;1s7+*LoKCJK<k+Ky');"}
      - {search_string: 'SECURE_AUTH_KEY', line: "define('SECURE_AUTH_KEY',  'w=hG+&q5lA+x%M$t2kQbe(kJ{fAF|b&xp~`KOhd4@X?+km%@f:,q%,=,qdOGW)2_');"}
      - {search_string: 'LOGGED_IN_KEY', line: "define('LOGGED_IN_KEY',    'mGP*oSXD;9b|-@HKN1GU$iiImw-WOertTFX)S8E4sqvpSXge&:aV_RqU]kq>6?&}');"}
      - {search_string: 'NONCE_KEY', line: "define('NONCE_KEY',        'aks:l g#rC-M2HpYt-$YC9_]|zin6Dc~J*+M#x86qwyAJo+f#D[KF,|a]#rK~%S+');"}
      - {search_string: 'AUTH_SALT', line: "define('AUTH_SALT',        'Qv-(.-E2hZh8Si|Cdfjy*&ggzmhCd+R)UHq9_#Bg^z-*HcS!KIrg%Q<S}+Q;;oO_');"}
      - {search_string: 'SECURE_AUTH_SALT', line: "define('SECURE_AUTH_SALT', '>4W]BxD$%nE!vB}0geKr/moXZMHtjQGsELC7iLsv&|(Yyup.ec| 2#JA8vw _z[@');"}
      - {search_string: 'LOGGED_IN_SALT', line: "define('LOGGED_IN_SALT',   'g4*JwRp;h!rg<#X}Q?Bp2|GZdQY|Aq_3m&(f|[O.Efx[1Nsxz`x#~;EbUl(f;m,e');"}
      - {search_string: 'NONCE_SALT', line: "define('NONCE_SALT',       'VGv>Cg7;PS)oIn_J[p>P[]JlF&,qWRNm>+:WY+|U!`V)~0+gVl8yBhl[FZ+PZI@|');"}
