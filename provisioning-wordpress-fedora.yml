---
- hosts: fedora
  handlers:
    - name: restart apache
      ansible.builtin.service:
        name: httpd
        state: restarted
        enabled: true
    - name: restart php-fpm
      ansible.builtin.service:
        name: php-fpm
        state: restarted
        enabled: true
    - name: restart mariadb
      ansible.builtin.service:
        name: mariadb
        state: restarted
        enabled: true
  name: Provisioning Wordpress - Fedora Server
  become: true
  tasks:
    - name: Add port 80 to firewalld
      shell:
        cmd: "firewall-cmd --add-port=80/tcp && firewall-cmd --runtime-to-permanent"
    - name: Install Apache
      dnf:
        pkg:
          - httpd
        state: latest
        update_cache: true
      notify:
        - restart apache
    - name: Install dependencies
      dnf:
        pkg:
          - php
          - php-fpm
          - php-mysqlnd
          - php-opcache
          - php-gd
          - php-xml
          - php-mbstring
          - php-curl
          - php-pecl-imagick
          - php-pecl-zip
          - libzip
          - python3-pip
        state: latest
        update_cache: true
    - name: Install PyMySQL - PIP
      ansible.builtin.pip:
        name:
          - PyMySQL
        state: latest
    - name: Edit php.ini (max_execution_time)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "max_execution_time"
        line: "max_execution_time = 300"
    - name: Edit php.ini (max_input_time)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "max_input_time"
        line: "max_input_time = 300"
    - name: Edit php.ini (memory_limit)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "memory_limit"
        line: "memory_limit = 512M"
    - name: Edit php.ini (post_max_size)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "post_max_size"
        line: "post_max_size = 256M"
    - name: Edit php.ini (upload_max_filesize)
      lineinfile:
        path: "/etc/php.ini"
        regexp: "upload_max_filesize"
        line: "upload_max_filesize = 256M"
      notify: restart php-fpm
    - name: Remove welcome.conf (/etc/httpd/conf.d/welcome.conf)
      shell:
        cmd: rm /etc/httpd/conf.d/welcome.conf
      ignore_errors: true
      notify: restart apache
    - name: Create php info file
      shell:
        cmd: echo "<?php phpinfo(); ?>" > /var/www/html/index.php
    - name: Install mysql
      dnf:
        pkg: mysql
        state: latest
        update_cache: true
      notify: restart mariadb
    - name: Create a new database with name 'wpdb'
      community.mysql.mysql_db:
        name: wpdb
        state: present
        login_unix_socket: /run/mariadb/mariadb.pid
      
      # ignore_errors: true
    - name: Create user wordpress and grant privileges
      community.mysql.mysql_user:
        name: wpuser
        password: 1234
        priv: 'wpdb.*:ALL'
        state: present
      # ansible.builtin.shell:
      #   cmd: mysql -e "GRANT ALL PRIVILEGES ON wpdb.* TO 'wpuser'@'localhost' IDENTIFIED BY '1234'; FLUSH PRIVILEGES;"
    - name: Download Wordpress
      ansible.builtin.unarchive:
        src: https://br.wordpress.org/latest-pt_BR.tar.gz
        dest: /var/www/html
        remote_src: true
    - name: Copy wordpress folder content to /var/www/html
      ansible.builtin.copy:
        src: /var/www/html/wordpress/
        dest: /var/www/html/
        remote_src: true
    - name: Delete wordpress folder
      shell:
        cmd: rm -rf /var/www/html/wordpress /var/www/html/*.tar.gz
    - name: Rename wp-config-sample.php to wp-config.php
      ansible.builtin.copy:
        src: /var/www/html/wp-config-sample.php
        dest: /var/www/html/wp-config.php
        remote_src: true
    - name: Define database settings (DB_NAME)
      ansible.builtin.lineinfile:
        path: /var/www/html/wp-config.php
        regexp: "DB_NAME"
        line: "define( 'DB_NAME', 'wpdb' );"
    - name: Define database settings (DB_USER)
      ansible.builtin.lineinfile:
        path: /var/www/html/wp-config.php
        regexp: "DB_USER"
        line: "define( 'DB_USER', 'wpuser' );"
    - name: Define database settings (DB_HOST)
      ansible.builtin.lineinfile:
        path: /var/www/html/wp-config.php
        regexp: "DB_HOST"
        line: "define( 'DB_HOST', 'localhost' );"
    - name: Define database settings (DB_PASSWORD)
      ansible.builtin.lineinfile:
        path: /var/www/html/wp-config.php
        regexp: "DB_PASSWORD"
        line: "define( 'DB_PASSWORD', '1234' );"